# Modular Health Checker Configuration
# This configuration demonstrates the new modular architecture

# Checker configurations
checkers:
  # Quality checkers
  cyclomatic-complexity:
    enabled: true
    severity: medium
    timeout: 30s
    options:
      default_threshold: 10
      detailed_report: true
      thresholds:
        python: 8
        java: 12
        javascript: 10
        typescript: 10
        go: 10
      include_tests: false
    categories: ["quality"]
    exclusions:
      - "*_test.go"
      - "test_*.py"
      - "*.spec.js"
      - "*.test.js"



  # Git checkers
  git-status:
    enabled: true
    severity: low
    timeout: 10s
    options:
      check_uncommitted: true
      check_untracked: true
      check_branch_protection: false
    categories: ["git"]
    exclusions: []

  git-commits:
    enabled: false
    severity: low
    timeout: 15s
    options:
      check_commit_messages: true
      max_commit_age_days: 90
    categories: ["git"]
    exclusions: []

  # Security checkers
  security-secrets:
    enabled: true
    severity: high
    timeout: 45s
    options:
      patterns:
        - "password"
        - "api_key"
        - "secret"
        - "token"
      exclude_files:
        - "*.md"
        - "*.txt"
    categories: ["security"]
    exclusions:
      - "test/"
      - "examples/"

  security-permissions:
    enabled: true
    severity: medium
    timeout: 20s
    options:
      check_executable: true
      check_world_writable: true
    categories: ["security"]
    exclusions: []

  # Dependency checkers
  dependencies-outdated:
    enabled: true
    severity: medium
    timeout: 60s
    options:
      check_security_advisories: true
      max_age_days: 180
    categories: ["dependencies"]
    exclusions: []

  dependencies-licenses:
    enabled: false
    severity: low
    timeout: 30s
    options:
      allowed_licenses:
        - "MIT"
        - "Apache-2.0"
        - "BSD-3-Clause"
      forbidden_licenses:
        - "GPL-3.0"
    categories: ["dependencies", "compliance"]
    exclusions: []

  # Documentation checkers
  documentation-readme:
    enabled: true
    severity: low
    timeout: 10s
    options:
      required_sections:
        - "Installation"
        - "Usage"
        - "Contributing"
    categories: ["documentation"]
    exclusions: []

  documentation-api:
    enabled: false
    severity: low
    timeout: 30s
    options:
      check_function_docs: true
      check_class_docs: true
    categories: ["documentation"]
    exclusions:
      - "test/"

# Language analyzer configurations
analyzers:
  python:
    enabled: true
    file_extensions: [".py"]
    exclude_patterns:
      - ".venv/"
      - "__pycache__/"
      - ".pytest_cache/"
      - "venv/"
      - "env/"
      - "site-packages/"
    complexity_enabled: true
    function_level: true
    categories: ["quality", "analysis"]

  java:
    enabled: true
    file_extensions: [".java"]
    exclude_patterns:
      - "target/"
      - "build/"
      - ".gradle/"
      - ".mvn/"
    complexity_enabled: true
    function_level: true
    categories: ["quality", "analysis"]

  javascript:
    enabled: true
    file_extensions: [".js", ".jsx"]
    exclude_patterns:
      - "node_modules/"
      - "dist/"
      - "build/"
      - ".next/"
      - ".nuxt/"
      - "coverage/"
    complexity_enabled: true
    function_level: true
    categories: ["quality", "analysis"]

  typescript:
    enabled: true
    file_extensions: [".ts", ".tsx"]
    exclude_patterns:
      - "node_modules/"
      - "dist/"
      - "build/"
      - ".next/"
      - ".nuxt/"
      - "coverage/"
    complexity_enabled: true
    function_level: true
    categories: ["quality", "analysis"]

  go:
    enabled: true
    file_extensions: [".go"]
    exclude_patterns:
      - "vendor/"
      - "*_test.go"
    complexity_enabled: true
    function_level: true
    categories: ["quality", "analysis"]

  csharp:
    enabled: false
    file_extensions: [".cs"]
    exclude_patterns:
      - "bin/"
      - "obj/"
      - "packages/"
    complexity_enabled: true
    function_level: true

  rust:
    enabled: false
    file_extensions: [".rs"]
    exclude_patterns:
      - "target/"
      - "Cargo.lock"
    complexity_enabled: true
    function_level: true

# Reporter configurations
reporters:
  console:
    enabled: true
    output_file: ""
    template: "table"
    options:
      show_summary: true
      show_details: false
      color_output: true
      max_issues_shown: 10

  json:
    enabled: false
    output_file: "health-report.json"
    template: ""
    options:
      pretty_print: true
      include_metadata: true

  xml:
    enabled: false
    output_file: "health-report.xml"
    template: "junit"
    options:
      include_timestamps: true

  html:
    enabled: false
    output_file: "health-report.html"
    template: "bootstrap"
    options:
      include_charts: true
      theme: "light"

  flake8:
    enabled: false
    output_file: "complexity-report.txt"
    template: ""
    options:
      detailed: true
      show_complexity: true
      sort_by_complexity: true

  csv:
    enabled: false
    output_file: "health-metrics.csv"
    template: ""
    options:
      include_headers: true
      delimiter: ","

# Engine configuration
engine:
  max_concurrency: 4
  timeout: 5m
  cache_enabled: true
  cache_ttl: 5m
  retry_attempts: 3
  retry_delay: 1s

# Global settings
global:
  log_level: "info"
  log_format: "json"
  progress_bar: true
  quiet_mode: false
