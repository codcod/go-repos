name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches-ignore:
      - main

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.24']
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Node.js dependencies
        run: npm ci

      - name: Download Go dependencies
        run: |
          go mod download
          go mod tidy
          go mod verify

      - name: Install development tools
        run: |
          make install-lint
          make install-go-tools
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Verify Go build
        run: make build

      - name: Run code quality checks
        run: |
          make fmt
          make vet
          golangci-lint cache clean
          make lint

      - name: Run unit tests
        run: make test-unit

      - name: Run integration tests
        run: make test-integration

      - name: Generate test coverage
        run: make test-coverage

      - name: Run benchmarks
        run: make test-bench

      - name: Validate commit messages (if commitlint is available)
        if: github.event_name == 'pull_request'
        run: |
          if command -v npx >/dev/null 2>&1; then
            npx commitlint --from=${{ github.event.pull_request.base.sha }} --to=${{ github.sha }}
          else
            echo "commitlint not available, skipping commit message validation"
          fi
        continue-on-error: true

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Install Go tools
        run: |
          make install-go-tools
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Run govulncheck vulnerability scanner
        run: govulncheck ./...

      - name: Run staticcheck linter
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...
